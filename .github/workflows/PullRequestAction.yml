name: GitFlow Pull Request Action

on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
      - review_requested
      - review_request_removed
      - assigned
      - unassigned
      
jobs:  
  gitflow-action:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Pegar Hora Atual
      id: current_time
      run: |
            adjusted_time=$(date -d "3 hours ago" +"%H:%M")
            echo "time=$adjusted_time" >> $GITHUB_OUTPUT

    - name: Limpar revisores
      run: |
            response=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers")   
            
            if [[ $? -eq 0 && $(echo "$response" | jq -e '.message') == "null" ]]; then
              team_reviewers=$(echo "$response" | jq -r '.teams[].slug' || echo "[]")
              reviewers=$(echo "$response" | jq -r '.users[].login' || echo "[]")

            # Cria um array para cada variável de saída
            team_reviewers_array=($team_reviewers)
            reviewers_array=($reviewers)

            fi  
              payload='{"reviewers":['
              first=true
              for reviewer in $reviewers; do
                if [ "$first" = true ]; then
                  first=false
                else
                  payload+=','
                fi
                payload+="\"$reviewer\""
              done

              payload+='],"team_reviewers":['
              first=true
              for team_reviewer in $team_reviewers; do
                if [ "$first" = true ]; then
                  first=false
                else
                  payload+=','
                fi
                payload+="\"$team_reviewer\""
              done
              payload+=']}'
          
              if [ -n "$payload" ]; then
                curl -X DELETE \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer $GITHUB_TOKEN" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  -d "$payload" \
                  "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers"
          
                echo "Revisores e revisores de equipe removidos com sucesso"
              else
                echo "Nenhum revisor ou revisor de equipe a ser removido"
              fi
                    
    - name: Adiciona o autor do PR como Assignee
      run: gh pr edit ${{ github.event.pull_request.number }} --add-assignee ${{ github.actor }}
    
    - name: Determina Revisores de Código
      id: review
      run: | 
        current_time="${{ steps.current_time.outputs.time }}"
        commercial_start=${{ vars.BUSINESS_HOURS_START }}
        commercial_end=${{ vars.BUSINESS_HOURS_END }}
        
        # Obtém o dia da semana (0 para domingo, 6 para sábado)
        day_of_week=$(date +%u)
    
        #Verifica se é sábado (6) ou domingo (0)
        if [[ "$day_of_week" -eq 6 || "$day_of_week" -eq 0 ]]; then
            echo "Fim de semana - Fora do horário comercial"
            echo "reviewers=${{ vars.OPERATION_TEAM_OUTSIDE_COMMERCIAL }}" >> $GITHUB_OUTPUT
        elif [[ "$day_of_week" -eq 5 && "$current_time" > "17:00" ]]; then
            echo "Sexta-feira após 17h - Fora do horário comercial"
            echo "reviewers=${{ vars.OPERATION_TEAM_OUTSIDE_COMMERCIAL }}" >> $GITHUB_OUTPUT
        elif [[ "$current_time" > "$commercial_start" && "$current_time" < "$commercial_end" ]]; then
            echo "Horário comercial"   
            echo "reviewers=${{ vars.OPERATION_TEAM_COMMERCIAL }}" >> $GITHUB_OUTPUT
        else
            echo "Fora do horário comercial"
            echo "reviewers=${{ vars.OPERATION_TEAM_OUTSIDE_COMMERCIAL }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Adiciona revisores de código ao PR
      run: gh pr edit ${{ github.event.pull_request.number }} --add-reviewer "${{ steps.review.outputs.reviewers }}"
